// Code generated by MockGen. DO NOT EDIT.
// Source: analytics.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	observability "github.com/snyk/code-client-go/observability"
)

// MockAnalytics is a mock of Analytics interface.
type MockAnalytics struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyticsMockRecorder
}

// MockAnalyticsMockRecorder is the mock recorder for MockAnalytics.
type MockAnalyticsMockRecorder struct {
	mock *MockAnalytics
}

// NewMockAnalytics creates a new mock instance.
func NewMockAnalytics(ctrl *gomock.Controller) *MockAnalytics {
	mock := &MockAnalytics{ctrl: ctrl}
	mock.recorder = &MockAnalyticsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalytics) EXPECT() *MockAnalyticsMockRecorder {
	return m.recorder
}

// TrackScan mocks base method.
func (m *MockAnalytics) TrackScan(arg0 bool, arg1 observability.ScanMetrics) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "TrackScan", arg0, arg1)
}

// TrackScan indicates an expected call of TrackScan.
func (mr *MockAnalyticsMockRecorder) TrackScan(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TrackScan", reflect.TypeOf((*MockAnalytics)(nil).TrackScan), arg0, arg1)
}
